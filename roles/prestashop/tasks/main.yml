---
# tasks file for roles/b2cdata
- name: Install aptitude using apt
  become: true
  apt: name=aptitude state=latest update_cache=yes force_apt_get=yes

- name: Install required system packages
  become: true
  apt: name={{ item }} state=latest update_cache=yes
  loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3-pip', 'virtualenv', 'python3-setuptools']

- name: Add Docker GPG apt Key
  become: true
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add Docker Repository
  become: true
  apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu bionic stable
    state: present

- name: Update apt and install docker-ce
  become: true
  apt: update_cache=yes name=docker-ce state=latest

- name: Update apt and install git
  become: true
  apt: update_cache=yes name=git state=latest

- name: add php7.4 repository 1
  become: true
  command: "apt -y install software-properties-common"

- name: add php7.4 repository 2
  become: true
  command: "add-apt-repository ppa:ondrej/php -y"

- name: Installing  php
  become: true
  apt:
    pkg:
      - php7.4
      - php7.4-cli
      - php7.4-fpm
      - php7.4-json 
      - php7.4-pdo 
      - php7.4-pgsql 
      - php7.4-zip 
      - php7.4-gd 
      - php7.4-ctype 
      - php7.4-tokenizer 
      - php7.4-xsl 
      - php7.4-mbstring 
      - php7.4-curl 
      - php7.4-xml 
      - php7.4-amqp 
      - php7.4-intl 
      - php-pear 
      - php-bcmath 
      - openssl
      - unzip
    state: latest
    update_cache: true

- name: installing php 2
  command: php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"

# - name: installing php 3
#   become: true
#   command: php -r "if (hash_file('sha384', 'composer-setup.php') === '906a84df04cea2aa72f40b5f787e49f22d4c2f19492ac310e8cba5b96ac8b64115ac402c8cd292b8a03482574915d1a8') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"

- name: installing php 4
  command: php composer-setup.php

- name: installing php 5
  command: php -r "unlink('composer-setup.php');"

- name: installing php 6
  become: true
  command: mv composer.phar /usr/bin/composer

- name: docker compose install 1
  become: true
  get_url:
    url : https://github.com/docker/compose/releases/download/1.29.2/docker-compose-Linux-x86_64
    dest: /usr/local/bin/docker-compose
    mode: 'u+x,g+x'

- name: installing prestashop 1
  command: git clone https://github.com/simonbustamante/nginx-prestashop.git

- name: check if db exist
  stat:
    path: /home/ubuntu/nginex-prestashop/db
  register: db

- name: check if prestashop exist
  stat:
    path: /home/ubuntu/nginex-prestashop/prestashop
  register: prestashop

- name: check if prestashop.sql exist
  stat:
    path: /home/ubuntu/nginex-prestashop/prestashop.sql
  register: sql

- name: check if node_module exist
  stat:
    path: /home/ubuntu/nginex-prestashop/node_modules
  register: nodemodules

- name: borrando db 
  become: true
  command: /home/ubuntu/nginx-prestashop/db
  when: db.stat.exists

- name: borrando prestashop 
  become: true
  command: /home/ubuntu/nginx-prestashop/prestashop
  when: prestashop.stat.exists

- name: borrando sql
  become: true
  command: /home/ubuntu/nginx-prestashop/prestashop.sql
  when: sql.stat.exists

- name: borrando node_modules 
  become: true
  command: /home/ubuntu/nginx-prestashop/node_modules
  when: nodemodules.stat.exists

- name: descargando prestashop
  command: chdir=/home/ubuntu/nginx-prestashop wget https://www.prestashop.com/download/old/prestashop_1.7.8.3.zip

- name: Descomprimiendo archivo
  command: chdir=/home/ubuntu/nginx-prestashop unzip prestashop_1.7.8.3.zip

- name: Instalando prestashop 1
  command: chdir=/home/ubuntu/nginx-prestashop mkdir prestashop

- name: Instalando prestashop 2
  command: chdir=/home/ubuntu/nginx-prestashop mv prestashop.zip prestashop

- name: Instalando prestashop 3
  command: chdir=/home/ubuntu/nginx-prestashop mv index.php prestashop

- name: Instalando prestashop 4
  command: chdir=/home/ubuntu/nginx-prestashop unzip -o prestashop/prestashop.zip -d prestashop/

- name: Instalando prestashop 5
  become: true
  command: chdir=/home/ubuntu/nginx-prestashop chown -R www-data:www-data prestashop/

- name: Instalando prestashop 6
  command: chdir=/home/ubuntu/nginx-prestashop rm prestashop_1.7.8.3.zip Install_PrestaShop.html

- name: Instalando prestashop 7
  become: true
  command: chdir=/home/ubuntu/nginx-prestashop docker-compose up -d --no-deps --build



